image:
  name: ubuntu-bionic-x86_64
  distribution: ubuntu
  release: bionic
  description: |-
    corsac ubuntu {{ image.release }}
  architecture: x86_64
  variant: cloud

source:
  downloader: debootstrap
  same_as: bionic
  url: http://archive.ubuntu.com/ubuntu
  keyserver: keyserver.ubuntu.com
  keys:
    - 0x790BC7277767219C42C86F933B4FE6ACC0B21F32

targets:
  lxc:
    create-message: |-
      you just created an {{ image.description }} container
    config:
      - type: all
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/ubuntu.common.conf
      - type: user
        before: 5
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/ubuntu.userns.conf
      - type: all
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/common.conf
      - type: user
        after: 4
        content: |-
          lxc.include = LXC_TEMPLATE_CONFIG/userns.conf
      - type: all
        content: |-
          lxc.arch = {{ image.architecture_personality }}

files:
  - path: /etc/hostname
    generator: template
    name: hostname
    content: |-
      {{ config_get("user.hostname", "localhost") }}

  - path: /etc/hosts
    generator: template
    name: hosts
    content: |-
      127.0.0.1	{{ config_get("user.fqdn", "localhost.localdomain") }}   {{ config_get("user.hostname", "localhost") }}

  - path: /etc/machine-id
    generator: remove

  - path: /var/lib/cloud/seed/nocloud-net/user-data
    generator: template
    name: cloud-init-user
    content: |-
      {{ config_get("user.user-data", properties.default) }}
    template:
      when:
        - copy
        - create
      properties:
        default: |
          #cloud-config
          {}
    variant:
      - cloud

  - path: /var/lib/cloud/seed/nocloud-net/meta-data
    generator: template
    name: cloud-init-meta
    content: |-
      instance-id: {{ container.name }}
      local-hostname: {{ config_get("user.hostname", "localhost") }}
      {{ config_get("user.meta-data", "") }}
    template:
      when:
        - create
        - copy
    variant:
      - cloud

  - path: /var/lib/cloud/seed/nocloud-net/network-config
    generator: template
    name: cloud-init-network
    content: |-
      {% if config_get("user.network-config", "") == "" %}version: 1
      config:
        - type: physical
          name: eth0
          subnets:
            - type: {% if config_get("user.network_mode", "") == "link-local" %}manual{% else %}dhcp{% endif %}
              control: auto{% else %}{{ config_get("user.network-config", "") }}{% endif %}
    template:
      when:
        - create
        - copy
    variant:
      - cloud

  - path: /var/lib/cloud/seed/nocloud-net/vendor-data
    generator: template
    name: cloud-init-vendor
    content: |-
      {{ config_get("user.vendor-data", properties.default) }}
    template:
      when:
        - create
        - copy
      properties:
        default: |
          #cloud-config
          {}
    variant:
      - cloud

packages:
  manager: apt
  update: true
  cleanup: true

  repositories:
    - name: sources.list
      url: |-
        deb http://archive.ubuntu.com/ubuntu {{ image.release }} main restricted universe multiverse
        deb http://archive.ubuntu.com/ubuntu {{ image.release }}-updates main restricted universe multiverse
        deb http://security.ubuntu.com/ubuntu {{ image.release }}-security main restricted universe multiverse
      architectures:
        - amd64
        - i386

    - name: sources.list
      url: |-
        deb http://ports.ubuntu.com/ubuntu-ports {{ image.release }} main restricted universe multiverse
        deb http://ports.ubuntu.com/ubuntu-ports {{ image.release }}-updates main restricted universe multiverse
        deb http://ports.ubuntu.com/ubuntu-ports {{ image.release }}-security main restricted universe multiverse
      architectures:
        - armhf
        - arm64
        - powerpc
        - powerpc64
        - ppc64el

  sets:
    - packages:
        - apt-transport-https
        - language-pack-en
        - openssh-client
        - neovim
      action: install

    - packages:
        - cloud-init
      action: install
      variants:
        - cloud

actions:
  - trigger: post-update
    action: |-
      #!/bin/sh
      set -eux
      # Create the ubuntu user account
      getent group sudo >/dev/null 2>&1 || groupadd --system sudo
      useradd --create-home -s /bin/bash -G sudo -U ubuntu
  - trigger: post-packages
    action: |-
      #!/bin/sh
      set -eux
      # Make sure the locale is built and functional
      locale-gen en_US.UTF-8
      update-locale LANG=en_US.UTF-8
      # Cleanup underlying /run
      mount -o bind / /mnt
      rm -rf /mnt/run/*
      umount /mnt
      # Cleanup temporary shadow paths
      rm /etc/*-
mappings:
  architecture_map: debian
